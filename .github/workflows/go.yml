# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go

on:
  push:
    branches-ignore: []
  pull_request:
    branches-ignore: []

jobs:

  build:
    runs-on: ubuntu-latest
    services: 
      postgres:
        image: postgres:15
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: postgres
          POSTGRES_DB: receipts_test
          POSTGRES_HOST_AUTH_METHOD: trust
        options: >-
          --health-cmd="pg_isready -U postgres"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5
    
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.22'

    - name: Check running containers
      run: docker ps -a

    - name: Check PostgreSQL service logs
      if: always()
      run: docker logs $(docker ps -q -f name=postgres)

    - name: Check running containers
      run: docker ps  

    - name: Wait for PostgreSQL to be ready
      run: |
        for i in {1..10}; do
          pg_isready -h localhost -p 5432 -U postgres -d receipts_test && break || sleep 5;
        done  

    - name: Print DATABASE_URL
      run: echo "postgres://postgres@localhost:5432/receipts_test?sslmode=disable"    

    # Сервис 1: receipt-loader
    - name: Install dependencies for receipt-loader
      working-directory: ./receipt-loader
      run: go mod tidy    

    - name: Generate Swagger docs
      working-directory: ./receipt-loader
      run: |
        go install github.com/swaggo/swag/cmd/swag@latest
        swag init -g cmd/main.go --output docs

    - name: Verify dependencies for receipt-loader
      working-directory: ./receipt-loader
      run: go mod verify    
    
    - name: Build receipt-loader
      working-directory: ./receipt-loader
      run: go build -v ./...

    - name: Test receipt-loader
      working-directory: ./receipt-loader
      run: go test -v ./...
